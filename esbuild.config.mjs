import esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';
import importGlobPlugin from 'esbuild-plugin-import-glob';
import { replace } from 'esbuild-plugin-replace';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const dummyMocksForDocs = `
document = {
    createElement: function() {},
};
`;

const isProduction = (process.argv[2] === 'production');
const defaultBuildSettings = {
  banner: {
    js: banner,
  },
  entryPoints: ['src/main.ts'],
  plugins: [
    importGlobPlugin.default(),
  ],
  bundle: true,
  external: [
    'obsidian',
    ...builtins],
  format: 'cjs',
  target: 'es2020',
  sourcemap: isProduction ? false : 'inline',
  minify: isProduction,
  treeShaking: true,
  outfile: 'main.js',
};

const localBuildPlugins = () => [
  importGlobPlugin.default(),
  replace({
    values: {
      // update usage of moment from obsidian to the node implementation of moment we have
      'import {moment} from \'obsidian\';': 'import moment from \'moment\';',
      // remove the use of obsidian in the options to allow for docs.js to run
      'import {Setting} from \'obsidian\';': '',
      // remove the use of obsidian in settings helper to allow for docs.js to run
      'import {Component, MarkdownRenderer} from \'obsidian\';': '',
    },
    delimiters: ['', ''],
  }),
];

esbuild
  .build(defaultBuildSettings)
  .then(() => {
    console.log('Mycoshiro Linter: Built \'main.js\'');
    esbuild.build({
      ...defaultBuildSettings,
      banner: {
        js: banner + dummyMocksForDocs,
      },
      entryPoints: ['src/docs.ts'],
      plugins: localBuildPlugins(),
      outfile: 'docs.js'
    });
  }).then(() => {
    console.log('Mycoshiro Linter: Built \'docs.js\'');
    esbuild.build({
      ...defaultBuildSettings,
      banner: {
        js: banner + dummyMocksForDocs,
      },
      entryPoints: ['src/translation-helper.ts'],
      plugins: localBuildPlugins(),
      outfile: 'translation-helper.js',
    });
  }).then(() => {
    console.log('Mycoshiro Linter: Built \'translation-helper.js\'');
    })
  .catch(() => {
    console.error('Mycoshiro Linter: Failed to build JavaScript output files.');
    process.exit(90);
  });
